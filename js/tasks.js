//–ù–µ–¥–∞–≤–Ω–æ –ö–∏—Ä–∏–ª–ª –Ω–∞—à–µ–ª —Å—Ç—Ä–æ–∫—É –∏–∑ —á–µ—Ç—ã—Ä–µ—Ö —Å–∏–º–≤–æ–ª–æ–≤. –ï–º—É —Å—Ç–∞–ª–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω–∞ –ø–æ—á—Ç–∏ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º. –°—Ç—Ä–æ–∫–∞ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—á—Ç–∏ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º, –µ—Å–ª–∏ –∏–∑ –Ω–µ–µ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª, —á—Ç–æ–±—ã –æ–Ω–∞ —á–∏—Ç–∞–ª–∞—Å—å —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ —Ç–∞–∫–∂–µ, –∫–∞–∫ –∏ —Å–ø—Ä–∞–≤–∞ –Ω–∞–ª–µ–≤–æ. –ü–æ–º–æ–≥–∏—Ç–µ –ö–∏—Ä–∏–ª–ª—É —ç—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å. –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –í –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ –∏–∑ —á–µ—Ç—ã—Ä–µ—Ö —Å—Ç—Ä–æ—á–Ω—ã—Ö –ª–∞—Ç–∏–Ω—Å–∫–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤. –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –í—ã–≤–µ–¥–∏—Ç–µ Ôªø ùëå ùê∏ ùëÜ YESÔªø, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ø–æ—á—Ç–∏ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º, Ôªø ùëÅ ùëÇ NOÔªø –≤ –∏–Ω–æ–º —Å–ª—É—á–∞–µ. –ó–∞–º–µ—á–∞–Ω–∏–µ –í –ø–µ—Ä–≤–æ–º –ø—Ä–∏–º–µ—Ä–µ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –≤—Ç–æ—Ä–æ–π —Å–∏–º–≤–æ–ª –∏–∑ —Å—Ç—Ä–æ–∫–∏, —Ç–æ–≥–¥–∞ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ "aba"
function isPalindrome (str) {
    res = 0

    for (let i = 0; i < str.length; i++) {
        let newStr = str.slice(0, i) + str.slice(i+1)
        if (newStr === newStr.split('').reverse().join('')) {
            res += 1
        }
    }
    return res > 0 ? 'YES' : 'NO'
}
